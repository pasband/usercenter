plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'java'

}

apply plugin: 'io.spring.dependency-management'
//apply plugin: 'maven'

//def getDate() {
//    def date = new Date()
//    def formattedDate = date.format('yyyyMMdd_HHmmss')
//    return formattedDate
//}

group = 'net.ltsoftware.platform'
version = '1.0.0'
//version = 'beta-'+getDate()
sourceCompatibility = '1.8'

repositories {
//    mavenCentral()
    maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
}

ext {
    set('springCloudVersion', "Greenwich.SR1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.1'
    implementation 'org.mybatis.generator:mybatis-generator-core:1.3.7'
    compile 'com.alibaba:fastjson:1.2.57'
    compile 'log4j:log4j:1.2.17'
    compile 'com.alibaba:druid:1.1.9'
    compile 'redis.clients:jedis:3.0.1'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.8'
    compile 'commons-lang:commons-lang:2.6'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    
    implementation 'com.alipay.sdk:alipay-sdk-java:3.7.89.ALL'
    compile group: 'com.google.zxing', name: 'core', version: '3.4.0'
    compile group: 'com.google.zxing', name: 'javase', version: '3.4.0'
    compile 'org.elasticsearch:elasticsearch:6.3.2'

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    compile group: 'com.google.guava', name: 'guava', version: '28.0-jre'
    compile group: 'io.swagger', name: 'swagger-models', version: '1.5.22'
//    compile project(':commons')
    runtimeOnly 'mysql:mysql-connector-java'
    compile fileTree(dir: 'lib', includes: ['*jar'])

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jar {
    archiveFileName = 'uc.jar'
    // Specify the desired output directory if needed
    // destinationDirectory = file('custom/path/to/output')
}